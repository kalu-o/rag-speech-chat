name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install Poetry
        run: pip install poetry==1.8.5
      - name: Install dependencies
        run: poetry install --sync

  build:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install Poetry
        run: pip install poetry==1.8.5
      - name: Build project
        run: |
          poetry build
          poetry export -o requirements.txt
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Upload requirements
        uses: actions/upload-artifact@v3
        with:
          name: requirements
          path: requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install Poetry
        run: pip install poetry==1.8.5
      - name: Run Unit Tests
        run: |
          poetry install
          poetry run pytest --verbose --junit-xml=junit.xml --cov --cov-report=xml test/unit_test.py
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: Upload Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: junit.xml

  publish_image:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Authenticate Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/rag-speech-chat:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/rag-speech-chat:latest
